# Rust
[[language]]
name = "rust"
scope = "source.rust"
injection-regex = "rust"
file-types = ["rs"]
roots = ["Cargo.toml", "Cargo.lock"]
language-servers = ["rust-analyzer" ]
formatter = { command = "rustfmt" }
auto-format = true
indent = { tab-width = 2, unit = "  " }

#Language server config
[language-server.rust-analyzer]
command = "rustup"
args = ["run", "stable", "rust-analyzer"]

#[language-server.rust-analyzer.config]

[language-server.rust-analyzer.config.check]
command = "clippy"

[language-servers.rust-analyzer.config.inlay-hints]
inlayHints.bindingModeHints.enable = false
inlayHints.closingBraceHints.minLines = 10
inlayHints.closureReturnTypeHints.enable = "with_block"
inlayHints.discriminantHints.enable = "fieldless"
inlayHints.lifetimeElisionHints.enable = "skip_trivial"
inlayHints.typeHints.hideClosureInitialization = false



[language.debugger]
name = "lldb-vscode"
transport = "stdio"
command = "lldb-vscode"

[[language.debugger.templates]]
name = "binary"
request = "launch"
completion = [{ name = "binary", completion = "filename" }]
args = { program = "{0}" }

[[language.debugger.templates]]
name = "binary (terminal)"
request = "launch"
completion = [{ name = "binary", completion = "filename" }]
args = { program = "{0}", runInTerminal = true }

[[language.debugger.templates]]
name = "attach"
request = "attach"
completion = ["pid"]
args = { pid = "{0}" }

[[language.debugger.templates]]
name = "gdbserver attach"
request = "attach"
completion = [
  { name = "lldb connect url", default = "connect://localhost:3333" },
  { name = "file", completion = "filename" },
  "pid",
]
args = { attachCommands = [
  "platform select remote-gdb-server",
  "platform connect {0}",
  "file {1}",
  "attach {2}",
] }


[language.auto-pairs]
'(' = ')'
'{' = '}'
'[' = ']'
'"' = '"'
'`' = '`'
'<' = '>'
[[grammar]]
name = "rust"



# Ron
[[language]]
name = "ron"
scope = "source.ron"
injection-regex = "ron"
file-types = ["ron"]
roots = []
comment-token = "//"
indent = { tab-width = 4, unit = "    " }
grammar = "rust"

# Toml
[[language]]
name = "toml"
scope = "source.toml"
roots = []
auto-format = true
injection-regex = "toml"
file-types = ["toml", "poetry.lock"]
comment-token = "#"
# language-server = { command = "taplo", args = ["lsp", "stdio"] }
indent = { tab-width = 2, unit = "  " }

[[grammar]]
name = "toml"
source = { git = "https://github.com/ikatyang/tree-sitter-toml", rev = "7cff70bbcbbc62001b465603ca1ea88edd668704" }

